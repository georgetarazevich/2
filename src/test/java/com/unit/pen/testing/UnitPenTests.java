package com.unit.pen.testing;

import static org.hamcrest.Matchers.equalTo;
import static org.junit.Assert.assertThat;
import static org.testng.Assert.assertFalse;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

public class UnitPenTests extends TestBase {

	@Test(dataProvider = "InkContainer_TrueValue", enabled = true)
	public void isWorkPen_InkContainer_TrueValue(Pen pen) {
		assertTrue(pen.isWork());
	}

	@Test(dataProvider = "InkContainer_FalseValue", enabled = true)
	public void isWorkPen_InkContainer_FalseValue(Pen pen) {
		assertFalse(pen.isWork());
	}

	@Test(enabled = true)
	public void isWorkPen_SizeLetter_TrueValue() {
		int inkContainerValue = 100;
		double sizeLetter = 2.0;
		String color = "RED";
		Pen pen = new Pen(inkContainerValue, sizeLetter, color);
		assertTrue(pen.isWork());
	}

	@Test(dataProvider = "SizeLetter_FalseValue", enabled = true)
	public void isWorkPen_SizeLetter_FalseValue(Pen pen) {
		assertFalse(pen.isWork());
	}

	@Test(enabled = true)
	public void checkForRightColorPen() {
		int inkContainerValue = 100;
		double sizeLetter = 2.0;
		String color = "RED";
		Pen pen = new Pen(inkContainerValue, sizeLetter, color);
		assertThat(pen.getColor(), equalTo(color));
	}

	@Test(dataProvider = "SizeLetter_FalseValue", enabled = true)
	public void isWritePen_SizeLetter_FalseValue(Pen pen) {
		String nothingWritten = "";
		String writtenByPen = pen.write("Hello Word!");
		assertThat(writtenByPen, equalTo(nothingWritten));
	}

	@Test(dataProvider = "InkContainer_FalseValue", enabled = true)
	public void isWritePen_InkContainer_FalseValue(Pen pen) {
		String nothingWritten = "";
		String writtenByPen = pen.write("Hello Word!");
		assertThat(writtenByPen, equalTo(nothingWritten));
	}

	@Test(dataProvider = "InkContainer_TrueValue", enabled = true)
	public void isWritePen_InkContainer_TrueValue(Pen pen) {
		String word = "Hello Word!";
		String writtenByPen = pen.write("Hello Word!");
		assertThat(writtenByPen, equalTo(word));
	}

	@Test(enabled = true)
	public void isWritePen_InkContainer_SmallValue() {
		int inkContainerValue = 7;
		double sizeLetter = 2.0;
		String expectedWord = "Hello W";
		Pen pen = new Pen(inkContainerValue, sizeLetter);
		String writtenByPen = pen.write("Hello Word!");
		assertThat(writtenByPen, equalTo(expectedWord));
	}
}
